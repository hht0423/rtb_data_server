<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    <context:component-scan base-package="com.ocean.rtb.persist.service" />
    <context:component-scan base-package="com.ocean.rtb.persist.dao" />
	<context:component-scan base-package="com.ocean.rtb.statistics.service" />
    <context:component-scan base-package="com.ocean.rtb.statistics.task.service" />
	<tx:annotation-driven/>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!--initialSize: 初始化连接 -->
		<property name="initialSize" value="5" />
		<!--maxIdle: 最大空闲连接 -->
		<property name="maxIdle" value="20" />
		<!--minIdle: 最小空闲连接 -->
		<property name="minIdle" value="5" />
		<!--maxActive: 最大连接数量 -->
		<property name="maxActive" value="20" />
		<!--removeAbandoned: 是否自动回收超时连接 -->
		<property name="removeAbandoned" value="true" />
		<!--removeAbandonedTimeout: 超时时间(以秒数为单位) -->
		<property name="removeAbandonedTimeout" value="180" />
		<!--maxWait: 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 -->
		<property name="maxWait" value="3000" />
		<!-- 连接被泄露时是否打印 -->  
        <property name="logAbandoned" value="true"/>
		<property name="validationQuery">
			<value>SELECT 1</value>
		</property>
		<property name="testOnBorrow">
			<value>true</value>
		</property>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
  		<property name="annotatedClasses">
			<list>
				<value>com.ocean.rtb.persist.bean.stat.SelfAdStat</value>
				<value>com.ocean.rtb.persist.bean.stat.ThirdAdStat</value>
				<value>com.ocean.rtb.persist.bean.stat.WasteBook</value>		
					
			</list>
		</property> 
<!-- 		<property name="packagesToScan">
			<list>
				<value>com.ocean.persist.model.proxy.*</value>
			</list>
		</property> -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQL5InnoDBDialect
				</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.max_fetch_depth">10</prop>
				<prop key="hibernate.default_batch_fetch_size">1</prop>
				<prop key="hibernate.query.substitutions">
					true 'Y', false 'N', yes 'Y', no 'N'
				</prop>
				<prop key="hibernate.jdbc.use_streams_for_binary">
					true
				</prop>
				<prop key="hibernate.use_outer_join">true</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.use_sql_comments">true</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.connection.release_mode">
					auto
				</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.provider_class">
					com.ams.common.cache.OscacheProvider
				</prop>
				<prop key="com.opensymphony.oscache.configurationResourceName">
					oscache.properties
				</prop>
				<prop key="hibernate.cache.use_minimal_puts">true</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.cache.use_structured_entries">
					true
				</prop>
				<prop key="current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext
				</prop>
				<prop key="auto-import">false</prop>
			</props>
		</property>
	</bean>

	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true">
		<aop:pointcut id="busssinesssService"
			expression="execution(* com.ocean.rtb.persist.service.stat.*.*(..))" /> 
		<aop:advisor advice-ref="txAdvice" pointcut-ref="busssinesssService"
			order="2" />
		
	</aop:config>



</beans>
